function e(e,t){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.add(e)}function t(e,t,s){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return s}var s=new WeakSet,i=new WeakSet;function a(){const{placeholder:e,data:t}=this.options;this.$el.classList.add("select"),this.$el.innerHTML=((e=[],t,s)=>{let i=t??"Placeholder по умолчанию";const a=e.map((e=>{let t="";return e.id===s&&(i=e.value,t="selected"),`\n      <li class="select__item ${t}" data-type="item" data-id="${e.id}">${e.value}</li>\n    `}));return`\n    <div class="select__backdrop" data-type="backdrop"></div>\n    <div class="select__input" data-type="input">\n      <span data-type="value">${i}</span>\n      <i class="fa fa-chevron-down" data-type="arrow"></i>\n    </div>\n    <div class="select__dropdown">\n      <ul class="select__list">\n        ${a.join("")}\n      </ul>\n    </div>\n  `})(t,e,this.selectedId)}function l(){this.clickHandler=this.clickHandler.bind(this),this.$el.addEventListener("click",this.clickHandler),this.$arrow=this.$el.querySelector('[data-type="arrow"]'),this.$value=this.$el.querySelector('[data-type="value"]')}const n=new class{constructor(n,c){e(this,i),e(this,s),this.$el=document.querySelector(n),this.options=c,this.selectedId=c.selectedId,t(this,s,a).call(this),t(this,i,l).call(this)}clickHandler(e){const{type:t}=e.target.dataset;if(["input","value","arrow"].includes(t))this.toggle();else if("item"===t){const t=e.target.dataset.id;this.select(t)}else"backdrop"===t&&this.close()}get isOpen(){return this.$el.classList.contains("open")}get current(){return this.options.data.find((e=>e.id===this.selectedId))}select(e){this.selectedId=e,this.$value.textContent=this.current.value,this.$el.querySelectorAll('[data-type="item"]').forEach((e=>{e.classList.remove("selected")})),this.$el.querySelector(`[data-id="${e}"]`).classList.add("selected"),this.options.onSelect&&this.options.onSelect(this.current),this.close()}toggle(){this.isOpen?this.close():this.open()}open(){this.$el.classList.add("open"),this.$arrow.classList.remove("fa-chevron-down"),this.$arrow.classList.add("fa-chevron-up")}close(){this.$el.classList.remove("open"),this.$arrow.classList.remove("fa-chevron-up"),this.$arrow.classList.add("fa-chevron-down")}destroy(){this.$el.removeEventListener("click",this.clickHandler),this.$el.innerHTML=""}}("#select",{placeholder:"Выбери пожалуйста элемент",data:[{id:"1",value:"React"},{id:"2",value:"Angular"},{id:"3",value:"Vue"},{id:"4",value:"React Native"},{id:"5",value:"Next"},{id:"6",value:"Nest"}],onSelect(e){console.log("Selected item",e)}});window.s=n;
//# sourceMappingURL=index.82025dd1.js.map
